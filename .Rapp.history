MYmemdf
MYmemdf$meeting_dateMY$rownames(MYmemdf)
MYmemdf$meeting_dateMY <- rownames(MYmemdf)
MYmemdf
MYmemdf <- do.call(rbind, MYmem)
rownames(MYmemdf)
MYmemdf$meeting_dateMY <- unlist(rownames(MYmemdf))
MYmemdf
MYmemdf <- do.call(rbind, MYmem)
str(MYmemdf)
as.data.frame(MYmem)
str(as.data.frame(MYmem))
stack(MYmem)
MYmemdf <- stack(MYmem)#
colnames(MYmemdf) <- c("names", "meeting_dateMY")#
#
plottingdf <- merge(monthly_new_mem, MYmemdf)
plottingdf
str(plottingdf)
plottingdf %>%#
	ggvis(x = ~meeting_dateMY, y = ~Freq, fill := "blue", key := ~meeting_dateMY) %>%#
	layer_bars(fill.hover = "red") %>%#
	add_axis("x", properties = axis_props(labels=list(angle=45, align = "left")), title = "", #
		title_offset = 50) %>%#
	add_axis("y", title = "Number of new members", ticks = 5) %>%#
	add_axis("x", orient = "top", ticks = 0, title = "Number of New Members per Month",#
           properties = axis_props(#
             axis = list(stroke = "white"),#
             labels = list(fontSize = 0))) %>%#
	add_tooltip(function(data) data$names)
plottingdf$id <- 1:nrow(plottingdf)
plottingdf %>%#
	ggvis(x = ~meeting_dateMY, y = ~Freq, fill := "blue", key := ~id) %>%#
	layer_bars(fill.hover = "red") %>%#
	add_axis("x", properties = axis_props(labels=list(angle=45, align = "left")), title = "", #
		title_offset = 50) %>%#
	add_axis("y", title = "Number of new members", ticks = 5) %>%#
	add_axis("x", orient = "top", ticks = 0, title = "Number of New Members per Month",#
           properties = axis_props(#
             axis = list(stroke = "white"),#
             labels = list(fontSize = 0))) %>%#
	add_tooltip(function(x){#
		plottingdf$names[plottingdf$id == x$id]#
		})
plottingdf$id
plottingdf %>%#
	ggvis(x = ~meeting_dateMY, y = ~Freq, fill := "blue", key := ~names) %>%#
	layer_bars(fill.hover = "red") %>%#
	add_axis("x", properties = axis_props(labels=list(angle=45, align = "left")), title = "", #
		title_offset = 50) %>%#
	add_axis("y", title = "Number of new members", ticks = 5) %>%#
	add_axis("x", orient = "top", ticks = 0, title = "Number of New Members per Month",#
           properties = axis_props(#
             axis = list(stroke = "white"),#
             labels = list(fontSize = 0))) %>%#
	add_tooltip(function(data) data$names)
plottingdf %>%#
	ggvis(x = ~meeting_dateMY, y = ~Freq, fill := "blue", key := ~names) %>%#
	layer_bars(fill.hover = "red") %>%#
	add_axis("x", properties = axis_props(labels=list(angle=45, align = "left")), title = "", #
		title_offset = 50) %>%#
	add_axis("y", title = "Number of new members", ticks = 5) %>%#
	add_axis("x", orient = "top", ticks = 0, title = "Number of New Members per Month",#
           properties = axis_props(#
             axis = list(stroke = "white"),#
             labels = list(fontSize = 0))) %>%#
	add_tooltip(function(data) data$names) %>#
	hide_legend("fill")
plottingdf %>%#
	ggvis(x = ~meeting_dateMY, y = ~Freq, fill := "blue", key := ~names) %>%#
	layer_bars(fill.hover = "red") %>%#
	add_axis("x", properties = axis_props(labels=list(angle=45, align = "left")), title = "", #
		title_offset = 50) %>%#
	add_axis("y", title = "Number of new members", ticks = 5) %>%#
	add_axis("x", orient = "top", ticks = 0, title = "Number of New Members per Month",#
           properties = axis_props(#
             axis = list(stroke = "white"),#
             labels = list(fontSize = 0))) %>%#
	add_tooltip(function(data) data$names) %>%#
	hide_legend("fill")
getwd()
setwd("../secretary_shiny_app/")
library(shiny)
libary(shinydashboard)
library(shinydashboard)
install.packages("shinydashboard")
library(shinydashboard)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
active_members <- sqlQuery(tm, "SELECT COUNT(*) FROM members WHERE member_status = 'Active'")
active_members
sqlColumns(tm, 'members')
active_members <- sqlQuery(tm, "SELECT COUNT(*) FROM members WHERE status = 'Active'")
active_members
str(active_members)
active_members <- as.character(sqlQuery(tm, "SELECT COUNT(*) FROM members WHERE status = 'Active'"))
str(active_members)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
report <- sqlQuery(tm, "SELECT * FROM meetings WHERE meeting_date = '2015-03-18'")
head(report)
report <- sqlQuery(tm, "SELECT role, name FROM meetings WHERE meeting_date = '2015-03-18'")
report
report <- sqlQuery(tm, "SELECT role, name FROM meetings WHERE meeting_date = '2015-03-18' AND name != "guest")
report <- sqlQuery(tm, "SELECT role, name FROM meetings WHERE meeting_date = '2015-03-18' AND name != 'guest'")
report
xtable(report)
install.packages(xtable)
install.packages("xtable")
xtable(report)
library(xtable)
xtable(report)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
a <- sqlQuery(tm, "SELECT DISTINT meeting_date FROM meetings")
a
a <- sqlQuery(tm, "SELECT DISTINCT meeting_date FROM meetings")
a
str(a)
a$ui_format <- format(as.Date(a$meeting_date), "%B %d, %Y")
a
runApp()
?selectInput
runApp()
runApp()
runApp()
runApp()
runApp()
?order
runApp()
runApp()
runApp()
runApp()
runApp()
?textInput
runApp()
runApp()
sqlQuery(tm, "SELECT name FROM members WHERE status = 'Active'")
runApp()
runApp()
runApp()
active_member_list
active_member_list[grep("Chris", active_member_list)]
active_member_list[grep("Chris", active_member_list)]
runApp()
?textOutput
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rm(list=ls())
gc()
runApp()
closeConnection(tm)
odbcClose(tm)
runApp()
odbcClose(tm)
runApp()
runApp()
runApp()
odbcClose(tm)
rm(list=ls())
runApp()
runApp()
rm(list=ls())
runApp()
rm(list=ls())
rm(list=ls())
runApp()
runApp()
runApp()
rm(list=ls())
runApp()
roles_list <- c("Toastmaster", #
				"Thought_of_the_Day", #
				"Ah_Counter",#
				"Grammarian", #
				"Timer/Vote_Counter",#
				"General_Evaluator",#
				"Table_Topics_Master",  #
				"Speaker", #
				"Evaluator",	#
				"Attendee")
roles_list[1]
roles_list[2]
roles_list[3]
roles_list[4]
roles_list[5]
roles_list[6]
roles_list[7]
roles_list[8]
roles_list[9]
roles_list[10]
rm(list=ls())
runApp()
odbcClose(tm)
rm(list=ls())
runApp()
odbcClose(tm)
rm(list=ls())
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
odbcClose(tm)
rm(list=ls())
runApp()
runApp()
runApp()
rm(list=ls())
odbcClose(tm)
odbcClose(tm)
runApp()
odbcClose(tm)
runApp()
runApp()
runApp()
runApp()
sqlTables(tm)
sqlColumns(tm, "awards")
sqlColumns(tm, "speeches")
odbcClose(tm)
odbcClose(tm)
runApp()
runApp()
odbcClose(tm)
rm(list=ls())
runApp()
odbcClose(tm)
rm(list=ls())
runApp()
odbcClose(tm)
runApp()
odbcClose(tm)
runApp()
odbcClose(tm)
rm(list=ls())
runApp()
traceback()
odbcClose(tm)
runApp()
odbcClose(tm)
rm(list=ls())
runApp()
odbcClose(tm)
runApp()
odbcClose(tm)
rm(list=ls())
runApp()
runApp()
odbcClose(tm)
runApp()
odbcClose(tm)
rm(list=ls())
runApp()
odbcClose(tm)
rm(list=ls())
runApp()
runApp()
odbcClose(tm)
runApp()
runApp()
odbcClose(tm)
runApp()
odbcClose(tm)
rm(list=ls())
runApp()
odbcClose(tm)
rm(list=ls())
runApp()
odbcClose(tm)
rm(list=ls())
runApp()
odbcClose(tm)
rm(list=ls())
runApp()
odbcClose(tm)
rm(list=ls())
runApp()
